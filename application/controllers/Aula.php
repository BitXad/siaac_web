<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Aula extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Aula_model');
        $this->load->model('Tipo_aula_model');
           
    } 

    /*
     * Listing of aula
     */
    function index()
    {
        $data['aula'] = $this->Aula_model->get_all_aula();
        
        $data['_view'] = 'aula/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new aula
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('aula_nombre','Aula Nombre','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'aula_nombre' => $this->input->post('aula_nombre'),
				'aula_descripcion' => $this->input->post('aula_descripcion'),
				'aula_capacidad' => $this->input->post('aula_capacidad'),
				'aula_tipo' => $this->input->post('aula_tipo'),
            );
            
            $aula_id = $this->Aula_model->add_aula($params);
            redirect('aula/index');
        }
        else
        {   
            $data['all_tipo_aula'] = $this->Tipo_aula_model->get_all_tipo_aula();        
            $data['_view'] = 'aula/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    public function generar_excel(){
    $llamadas = $this->Aula_model->get_all_aula();
    if(count($llamadas) > 0){
        //Cargamos la librería de excel.
        $this->load->library('excel'); $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('Llamadas');
        //Contador de filas
        $contador = 1;
        //Le aplicamos ancho las columnas(OPCIONAL).
        $this->excel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('B')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        //Le aplicamos negrita a los títulos de la cabecera(OPCIONAL).
        $this->excel->getActiveSheet()->getStyle("A{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("B{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("C{$contador}")->getFont()->setBold(true);
        //Definimos los títulos de la cabecera.
        $this->excel->getActiveSheet()->setCellValue("A{$contador}", 'Nombre');
        $this->excel->getActiveSheet()->setCellValue("B{$contador}", 'Descripcion');
        $this->excel->getActiveSheet()->setCellValue("C{$contador}", 'Capacidad');
        $this->excel->getActiveSheet()->setCellValue("D{$contador}", 'Tipo');
        //Definimos la data del cuerpo.        
        foreach($llamadas as $l){
           //Incrementamos una fila más, para ir a la siguiente.
           $contador++;
           //Informacion de las filas de la consulta.
         
           $this->excel->getActiveSheet()->setCellValue("A{$contador}", $l['aula_nombre']);
           $this->excel->getActiveSheet()->setCellValue("B{$contador}", $l['aula_descripcion']);
           $this->excel->getActiveSheet()->setCellValue("C{$contador}", $l['aula_capacidad']);
           $this->excel->getActiveSheet()->setCellValue("D{$contador}", $l['tipoaula_descripcion']);
        }
        //Le ponemos un nombre al archivo que se va a generar.
        $hoy = date('d/m/Y H:i:s');
        $archivo = "Aula".$hoy.".xls";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$archivo.'"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');
        //Hacemos una salida al navegador con el archivo Excel.
        $objWriter->save('php://output');
     }else{
        echo 'No se han encontrado llamadas';
        exit;        
     }
  }

    /*
     * Editing a aula
     */
    function edit($aula_id)
    {   
        // check if the aula exists before trying to edit it
        $data['aula'] = $this->Aula_model->get_aula($aula_id);
        
        if(isset($data['aula']['aula_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('aula_nombre','Aula Nombre','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'aula_nombre' => $this->input->post('aula_nombre'),
					'aula_descripcion' => $this->input->post('aula_descripcion'),
					'aula_capacidad' => $this->input->post('aula_capacidad'),
					'aula_tipo' => $this->input->post('aula_tipo'),
                );

                $this->Aula_model->update_aula($aula_id,$params);            
                redirect('aula/index');
            }
            else
            {
                $data['all_tipo_aula'] = $this->Tipo_aula_model->get_all_tipo_aula();
                $data['_view'] = 'aula/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The aula you are trying to edit does not exist.');
    } 

    /*
     * Deleting aula
     */
    function remove($aula_id)
    {
        $aula = $this->Aula_model->get_aula($aula_id);

        // check if the aula exists before trying to delete it
        if(isset($aula['aula_id']))
        {
            $this->Aula_model->delete_aula($aula_id);
            redirect('aula/index');
        }
        else
            show_error('The aula you are trying to delete does not exist.');
    }
    
}
