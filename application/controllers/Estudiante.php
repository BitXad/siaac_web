<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Estudiante extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Estudiante_model');
        $this->load->model('Cliente_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }

     private function privado($estudiante_id){
        $estudiante = $this->session_data['usuario_id'];
        if($estudiante == $estudiante_id){
            return true;
        }else{
            $data['_view'] = 'login/mensajeprivado';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Listing of estudiante
     */
    function index()
    {
        if($this->acceso(48)){
            $this->load->model('Estado_model');
            $tipo = 1;
            $data['all_estado'] = $this->Estado_model->get_estado_tipo($tipo);
            $data['estudiante'] = $this->Estudiante_model->get_all_estudiante();
            $data['_view'] = 'estudiante/index';
            $this->load->view('layouts/main',$data);
        }
    }
    function buscar_estudiante(){
        
        $parametro = $this->input->post('parametro');
        $estado = $this->input->post('estado');
        $estudiantes = $this->Estudiante_model->get_estudiantes($parametro,$estado);
        echo json_encode($estudiantes);
        
    }

    /*
     * Adding a new estudiante
     */
    function add()
    {
        if($this->acceso(49)){
            $this->load->library('form_validation');
            $this->form_validation->set_rules('estudiante_nombre','Estudiante Nombre','required');
            $this->form_validation->set_rules('estudiante_apellidos','Estudiante Apellidos','required');
            $this->form_validation->set_rules('estudiante_ci','estudiante_ci','is_unique[estudiante.estudiante_ci]', array('is_unique' => 'Este C.I. ya fue Registrado'));
            $this->form_validation->set_rules('estudiante_codigo','estudiante_codigo','is_unique[estudiante.estudiante_codigo]',array('is_unique' => 'Este Codigo ya fue Registrado'));

            
            if($this->form_validation->run())     
            {
                /* *********************INICIO imagen***************************** */
                    $foto="";
                    if (!empty($_FILES['estudiante_foto']['name'])){
                            $this->load->library('image_lib');

                            $config['upload_path'] = './resources/images/estudiantes/';
                            $img_full_path = $config['upload_path'];

                            $config['allowed_types'] = 'gif|jpeg|jpg|png';
                            $config['max_size'] = 0;
                            /*$config['max_width'] = 2900;
                            $config['max_height'] = 2900;*/

                            $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                            $config['file_name'] = $new_name; //.$extencion;
                            $config['file_ext_tolower'] = TRUE;

                            $this->load->library('upload', $config);
                            $this->upload->do_upload('estudiante_foto');

                            $img_data = $this->upload->data();
                            $extension = $img_data['file_ext'];
                            /* ********************INICIO para resize***************************** */
                            if ($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                                $conf['image_library'] = 'gd2';
                                $conf['source_image'] = $img_data['full_path'];
                                $conf['new_image'] = './resources/images/estudiantes/';
                                $conf['maintain_ratio'] = TRUE;
                                $conf['create_thumb'] = FALSE;
                                $conf['width'] = 800;
                                $conf['height'] = 600;
                                $this->image_lib->clear();
                                $this->image_lib->initialize($conf);
                                if(!$this->image_lib->resize()){
                                    echo $this->image_lib->display_errors('','');
                                }
                            }
                            /* ********************F I N  para resize***************************** */
                            $confi['image_library'] = 'gd2';
                            $confi['source_image'] = './resources/images/estudiantes/'.$new_name.$extension;
                            $confi['new_image'] = './resources/images/estudiantes/'."thumb_".$new_name.$extension;
                            $confi['create_thumb'] = FALSE;
                            $confi['maintain_ratio'] = TRUE;
                            $confi['width'] = 50;
                            $confi['height'] = 50;

                            $this->image_lib->clear();
                            $this->image_lib->initialize($confi);
                            $this->image_lib->resize();

                            $foto = $new_name.$extension;
                        }
                /* *********************FIN imagen***************************** */
                 /* *********************INICIO imagen***************************** */
                    $fotoapo="";
                    if (!empty($_FILES['apoderado_foto']['name'])){
                            $this->load->library('image_lib');    
                            $config1['upload_path'] = './resources/images/apoderados/';
                            $img_full_path1 = $config1['upload_path'];

                            $config1['allowed_types'] = 'gif|jpeg|jpg|png';
                            $config1['max_size'] = 200000;
                            $config1['max_width'] = 2900;
                            $config1['max_height'] = 2900;

                            $new_name1 = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                            $config1['file_name'] = $new_name1; //.$extencion;
                            $config1['file_ext_tolower'] = TRUE;


                            $this->load->library('upload', $config1);
                            $this->upload->initialize($config1);
                            $this->upload->do_upload('apoderado_foto');

                            $img_data1 = $this->upload->data();
                            $extension1 = $img_data1['file_ext'];
                            /* ********************INICIO para resize***************************** */
                            if ($img_data1['file_ext'] == ".jpg" || $img_data1['file_ext'] == ".png" || $img_data1['file_ext'] == ".jpeg" || $img_data1['file_ext'] == ".gif") {
                                $conf1['image_library'] = 'gd2';
                                $conf1['source_image'] = $img_data1['full_path'];
                                $conf1['new_image'] = './resources/images/apoderados/';
                                $conf1['maintain_ratio'] = TRUE;
                                $conf1['create_thumb'] = FALSE;
                                $conf1['width'] = 800;
                                $conf1['height'] = 600;
                                $this->image_lib->clear();
                                $this->image_lib->initialize($conf1);
                                if(!$this->image_lib->resize()){
                                    echo $this->image_lib->display_errors('','');
                                }
                            }
                            /* ********************F I N  para resize***************************** */
                            $confi1['image_library'] = 'gd2';
                            $confi1['source_image'] = './resources/images/apoderados/'.$new_name1.$extension1;
                            $confi1['new_image'] = './resources/images/apoderados/'."thumb_".$new_name1.$extension1;
                            $confi1['create_thumb'] = FALSE;
                            $confi1['maintain_ratio'] = TRUE;
                            $confi1['width'] = 50;
                            $confi1['height'] = 50;

                            $this->image_lib->clear();
                            $this->image_lib->initialize($confi1);
                            $this->image_lib->resize();

                            $fotoapo = $new_name1.$extension1;
                        }
                /* *********************FIN imagen***************************** */
                $paramc = array(
                    'estado_id' => 1,
                    'tipocliente_id' => 1,
                    'categoriaclie_id' => 1,
                    'cliente_codigo' => $this->input->post('estudiante_codigo'),
                    'cliente_nombre' => $this->input->post('estudiante_nombre')." ".$this->input->post('estudiante_apellidos'),
                    'cliente_ci' => $this->input->post('estudiante_ci'),
                    'cliente_direccion' => $this->input->post('estudiante_direccion'),
                    'cliente_telefono' => $this->input->post('estudiante_telefono'),
                    'cliente_celular' => $this->input->post('estudiante_celular'),
                    'cliente_email' => $this->input->post('estudiante_email'),
                    'cliente_nit' => $this->input->post('estudiante_nit'),
                    'cliente_razon' => $this->input->post('estudiante_razon'),
                );
                $cliente_id = $this->Cliente_model->add_cliente($paramc);
                $params = array(
                    'estado_id' => 1,
                    'genero_id' => $this->input->post('genero_id'),
                    'estadocivil_id' => $this->input->post('estadocivil_id'),
                    'estudiante_nombre' => $this->input->post('estudiante_nombre'),
                    'estudiante_apellidos' => $this->input->post('estudiante_apellidos'),
                    'estudiante_fechanac' => $this->input->post('estudiante_fechanac'),
                    'estudiante_edad' => $this->input->post('estudiante_edad'),
                    'estudiante_ci' => $this->input->post('estudiante_ci'),
                    'estudiante_extci' => $this->input->post('estudiante_extci'),
                    'estudiante_codigo' => $this->input->post('estudiante_codigo'),
                    'estudiante_direccion' => $this->input->post('estudiante_direccion'),
                    'estudiante_telefono' => $this->input->post('estudiante_telefono'),
                    'estudiante_celular' => $this->input->post('estudiante_celular'),
                    'estudiante_foto' => $foto,
                    'estudiante_lugarnac' => $this->input->post('estudiante_lugarnac'),
                    'estudiante_nacionalidad' => $this->input->post('estudiante_nacionalidad'),
                    'estudiante_establecimiento' => $this->input->post('estudiante_establecimiento'),
                    'estudiante_distrito' => $this->input->post('estudiante_distrito'),
                    'estudiante_apoderado' => $this->input->post('estudiante_apoderado'),
                    'apoderado_foto' => $fotoapo,
                    'estudiante_apodireccion' => $this->input->post('estudiante_apodireccion'),
                    'estudiante_apoparentesco' => $this->input->post('estudiante_apoparentesco'),
                    'estudiante_apotelefono' => $this->input->post('estudiante_apotelefono'),
                    'estudiante_nit' => $this->input->post('estudiante_nit'),
                    'estudiante_razon' => $this->input->post('estudiante_razon'),
                    'estudiante_email' => $this->input->post('estudiante_email'),
                    'estudiante_login' => $this->input->post('estudiante_login'),
                    'estudiante_clave' => md5($this->input->post('estudiante_clave')),
                    'tipousuario_id' => 3,
                    'cliente_id' => $cliente_id,
                );
                $estudiante_id = $this->Estudiante_model->add_estudiante($params);
                
                redirect('estudiante/index');
            }
            else
            {
                
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $this->load->model('Genero_model');
                $data['all_genero'] = $this->Genero_model->get_all_genero();

                $this->load->model('Estado_civil_model');
                $data['all_estado_civil'] = $this->Estado_civil_model->get_all_estado_civil();

                $data['_view'] = 'estudiante/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Registrar nuevo estudiante
     */
    function registrar()
    {
        //rol viene desde inscripcion
        if($this->acceso(1)){
            $this->load->library('form_validation');
            $this->form_validation->set_rules('estudiante_nombre','Estudiante Nombre','required');
            $this->form_validation->set_rules('estudiante_apellidos','Estudiante Apellidos','required');
            $this->form_validation->set_rules('estudiante_ci','estudiante_ci','is_unique[estudiante.estudiante_ci]', array('is_unique' => 'Este C.I. ya fue Registrado'));
            $this->form_validation->set_rules('estudiante_codigo','estudiante_codigo','is_unique[estudiante.estudiante_codigo]',array('is_unique' => 'Este Codigo ya fue Registrado'));

            if($this->form_validation->run())     
            {
                /* *********************INICIO imagen***************************** */
                $foto="";
                if(!empty($_FILES['estudiante_foto']['name'])){
                    $this->load->library('image_lib');

                    $config['upload_path'] = './resources/images/estudiantes/';
                    $img_full_path = $config['upload_path'];

                    $config['allowed_types'] = 'gif|jpeg|jpg|png';
                    $config['max_size'] = 0;
                    /*$config['max_width'] = 2900;
                    $config['max_height'] = 2900;*/

                    $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                    $config['file_name'] = $new_name; //.$extencion;
                    $config['file_ext_tolower'] = TRUE;

                    $this->load->library('upload', $config);
                    $this->upload->do_upload('estudiante_foto');

                    $img_data = $this->upload->data();
                    $extension = $img_data['file_ext'];
                    /* ********************INICIO para resize***************************** */
                    if ($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                        $conf['image_library'] = 'gd2';
                        $conf['source_image'] = $img_data['full_path'];
                        $conf['new_image'] = './resources/images/estudiantes/';
                        $conf['maintain_ratio'] = TRUE;
                        $conf['create_thumb'] = FALSE;
                        $conf['width'] = 800;
                        $conf['height'] = 600;
                        $this->image_lib->clear();
                        $this->image_lib->initialize($conf);
                        if(!$this->image_lib->resize()){
                            echo $this->image_lib->display_errors('','');
                        }
                    }
                    /* ********************F I N  para resize***************************** */
                    $confi['image_library'] = 'gd2';
                    $confi['source_image'] = './resources/images/estudiantes/'.$new_name.$extension;
                    $confi['new_image'] = './resources/images/estudiantes/'."thumb_".$new_name.$extension;
                    $confi['create_thumb'] = FALSE;
                    $confi['maintain_ratio'] = TRUE;
                    $confi['width'] = 50;
                    $confi['height'] = 50;

                    $this->image_lib->clear();
                    $this->image_lib->initialize($confi);
                    $this->image_lib->resize();

                    $foto = $new_name.$extension;
                }
                /* *********************FIN imagen***************************** */
                /* *********************INICIO imagen***************************** */
                $fotoapo="";
                if (!empty($_FILES['apoderado_foto']['name'])){
                    $this->load->library('image_lib');    
                    $config1['upload_path'] = './resources/images/apoderados/';
                    $img_full_path1 = $config1['upload_path'];

                    $config1['allowed_types'] = 'gif|jpeg|jpg|png';
                    $config1['max_size'] = 0;
                    /*$config1['max_width'] = 2900;
                    $config1['max_height'] = 2900;*/

                    $new_name1 = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                    $config1['file_name'] = $new_name1; //.$extencion;
                    $config1['file_ext_tolower'] = TRUE;


                    $this->load->library('upload', $config1);
                    $this->upload->initialize($config1);
                    $this->upload->do_upload('apoderado_foto');

                    $img_data1 = $this->upload->data();
                    $extension1 = $img_data1['file_ext'];
                    /* ********************INICIO para resize***************************** */
                    if ($img_data1['file_ext'] == ".jpg" || $img_data1['file_ext'] == ".png" || $img_data1['file_ext'] == ".jpeg" || $img_data1['file_ext'] == ".gif") {
                        $conf1['image_library'] = 'gd2';
                        $conf1['source_image'] = $img_data1['full_path'];
                        $conf1['new_image'] = './resources/images/apoderados/';
                        $conf1['maintain_ratio'] = TRUE;
                        $conf1['create_thumb'] = FALSE;
                        $conf1['width'] = 800;
                        $conf1['height'] = 600;
                        $this->image_lib->clear();
                        $this->image_lib->initialize($conf1);
                        if(!$this->image_lib->resize()){
                            echo $this->image_lib->display_errors('','');
                        }
                    }
                    /* ********************F I N  para resize***************************** */
                    $confi1['image_library'] = 'gd2';
                    $confi1['source_image'] = './resources/images/apoderados/'.$new_name1.$extension1;
                    $confi1['new_image'] = './resources/images/apoderados/'."thumb_".$new_name1.$extension1;
                    $confi1['create_thumb'] = FALSE;
                    $confi1['maintain_ratio'] = TRUE;
                    $confi1['width'] = 50;
                    $confi1['height'] = 50;

                    $this->image_lib->clear();
                    $this->image_lib->initialize($confi1);
                    $this->image_lib->resize();

                    $fotoapo = $new_name1.$extension1;
                }
                /* *********************FIN imagen***************************** */
                $paramc = array(
                    'estado_id' => 1,
                    'tipocliente_id' => 1,
                    'categoriaclie_id' => 1,
                    'cliente_codigo' => $this->input->post('estudiante_codigo'),
                    'cliente_nombre' => $this->input->post('estudiante_nombre')." ".$this->input->post('estudiante_apellidos'),
                    'cliente_ci' => $this->input->post('estudiante_ci'),
                    'cliente_direccion' => $this->input->post('estudiante_direccion'),
                    'cliente_telefono' => $this->input->post('estudiante_telefono'),
                    'cliente_celular' => $this->input->post('estudiante_celular'),
                    'cliente_email' => $this->input->post('estudiante_email'),
                    'cliente_nit' => $this->input->post('estudiante_nit'),
                    'cliente_razon' => $this->input->post('estudiante_razon'),
                );
                $cliente_id = $this->Cliente_model->add_cliente($paramc);
                
                $params = array(
                    'estado_id' => 1,
                    'genero_id' => $this->input->post('genero_id'),
                    'estadocivil_id' => $this->input->post('estadocivil_id'),
                    'estudiante_nombre' => $this->input->post('estudiante_nombre'),
                    'estudiante_apellidos' => $this->input->post('estudiante_apellidos'),
                    'estudiante_fechanac' => $this->input->post('estudiante_fechanac'),
                    'estudiante_edad' => $this->input->post('estudiante_edad'),
                    'estudiante_ci' => $this->input->post('estudiante_ci'),
                    'estudiante_extci' => $this->input->post('estudiante_extci'),
                    'estudiante_codigo' => $this->input->post('estudiante_codigo'),
                    'estudiante_direccion' => $this->input->post('estudiante_direccion'),
                    'estudiante_telefono' => $this->input->post('estudiante_telefono'),
                    'estudiante_celular' => $this->input->post('estudiante_celular'),
                    'estudiante_foto' => $foto,
                    'estudiante_lugarnac' => $this->input->post('estudiante_lugarnac'),
                    'estudiante_nacionalidad' => $this->input->post('estudiante_nacionalidad'),
                    'estudiante_establecimiento' => $this->input->post('estudiante_establecimiento'),
                    'estudiante_distrito' => $this->input->post('estudiante_distrito'),
                    'estudiante_apoderado' => $this->input->post('estudiante_apoderado'),
                    'apoderado_foto' => $fotoapo,
                    'estudiante_apodireccion' => $this->input->post('estudiante_apodireccion'),
                    'estudiante_apoparentesco' => $this->input->post('estudiante_apoparentesco'),
                    'estudiante_apotelefono' => $this->input->post('estudiante_apotelefono'),
                    'estudiante_nit' => $this->input->post('estudiante_nit'),
                    'estudiante_razon' => $this->input->post('estudiante_razon'),
                    'estudiante_email' => $this->input->post('estudiante_email'),
                    'estudiante_login' => $this->input->post('estudiante_codigo'),
                    'estudiante_clave' => md5($this->input->post('estudiante_ci')),
                    'tipousuario_id' => 3,
                    'cliente_id' => $cliente_id,
                );

                $estudiante_id = $this->Estudiante_model->add_estudiante($params);
                redirect('inscripcion/inscribir/'.$estudiante_id);
            }
            else
            {
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $this->load->model('Genero_model');
                $data['all_genero'] = $this->Genero_model->get_all_genero();

                $this->load->model('Estado_civil_model');
                $data['all_estado_civil'] = $this->Estado_civil_model->get_all_estado_civil();

                $data['_view'] = 'estudiante/registrar';
                $this->load->view('layouts/main',$data);
            }
        }
    }

    /*
     * Editing a estudiante
     */
    function edit($estudiante_id)
    {
        if($this->acceso(50)){

        $original_ci = $this->db->query("SELECT estudiante_ci FROM estudiante WHERE estudiante_id = " . $estudiante_id)->row()->estudiante_ci;
        $original_codigo = $this->db->query("SELECT estudiante_codigo FROM estudiante WHERE estudiante_id = " . $estudiante_id)->row()->estudiante_codigo;

        if ($this->input->post('estudiante_ci') != $original_ci) {
            $is_unique = '|is_unique[estudiante.estudiante_ci]';
        } else {
            $is_unique = '';
        }
        if ($this->input->post('estudiante_codigo') != $original_codigo) {
            $is_unique1 = '|is_unique[estudiante.estudiante_codigo]';
        } else {
            $is_unique1 = '';
        }
            // check if the estudiante exists before trying to edit it
            $data['estudiante'] = $this->Estudiante_model->get_estudiante($estudiante_id);

            if(isset($data['estudiante']['estudiante_id']))
            {
                $this->load->library('form_validation');

                $this->form_validation->set_rules('estudiante_nombre','Estudiante Nombre','required');
                $this->form_validation->set_rules('estudiante_apellidos','Estudiante Apellidos','required');
                $this->form_validation->set_rules('estudiante_ci', 'estudiante_ci', 'required' . $is_unique, array('is_unique' => 'Este C.I. de estudiante ya existe.'));
                $this->form_validation->set_rules('estudiante_codigo', 'estudiante_codigo', 'required' . $is_unique1, array('is_unique' => 'Este codigo de estudiante ya existe.'));

                if($this->form_validation->run())     
                {   
                    /* *********************INICIO imagen***************************** */
                    $foto="";
                    $foto1= $this->input->post('estudiante_foto1');
                    if (!empty($_FILES['estudiante_foto']['name']))
                    {
                        $this->load->library('image_lib');
                        $config['upload_path'] = './resources/images/estudiantes/';
                        $config['allowed_types'] = 'gif|jpeg|jpg|png';
                        $config['max_size'] = 0;
                        /*$config['max_width'] = 2900;
                        $config['max_height'] = 2900;*/

                        $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                        $config['file_name'] = $new_name; //.$extencion;
                        $config['file_ext_tolower'] = TRUE;

                        $this->load->library('upload', $config);
                        $this->upload->do_upload('estudiante_foto');

                        $img_data = $this->upload->data();
                        $extension = $img_data['file_ext'];
                        /* ********************INICIO para resize***************************** */
                        if($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                            $conf['image_library'] = 'gd2';
                            $conf['source_image'] = $img_data['full_path'];
                            $conf['new_image'] = './resources/images/estudiantes/';
                            $conf['maintain_ratio'] = TRUE;
                            $conf['create_thumb'] = FALSE;
                            $conf['width'] = 800;
                            $conf['height'] = 600;
                            $this->image_lib->clear();
                            $this->image_lib->initialize($conf);
                            if(!$this->image_lib->resize()){
                                echo $this->image_lib->display_errors('','');
                            }
                        }
                        /* ********************F I N  para resize***************************** */
                        //$directorio = base_url().'resources/imagenes/';
                        $directorio = $_SERVER['DOCUMENT_ROOT'].'/siaac_web/resources/images/estudiantes/';
                        if(isset($foto1) && !empty($foto1)){
                          if(file_exists($directorio.$foto1)){
                              unlink($directorio.$foto1);
                              $mimagenthumb = str_replace(".", "_thumb.", $foto1);
                              unlink($directorio.$mimagenthumb);
                          }
                      }
                        $confi['image_library'] = 'gd2';
                        $confi['source_image'] = './resources/images/estudiantes/'.$new_name.$extension;
                        $confi['new_image'] = './resources/images/estudiantes/'."thumb_".$new_name.$extension;
                        $confi['create_thumb'] = FALSE;
                        $confi['maintain_ratio'] = TRUE;
                        $confi['width'] = 50;
                        $confi['height'] = 50;

                        $this->image_lib->clear();
                        $this->image_lib->initialize($confi);
                        $this->image_lib->resize();

                        $foto = $new_name.$extension;
                    }else{
                        $foto = $foto1;
                    }
                /* *********************FIN imagen***************************** */
                /* *********************INICIO imagen APODERADO***************************** */
                    $fotoapo="";
                    $fotoapo1= $this->input->post('apoderado_foto1');
                    if (!empty($_FILES['apoderado_foto']['name']))
                    {
                        $this->load->library('image_lib');
                        $config1['upload_path'] = './resources/images/apoderados/';
                        $config1['allowed_types'] = 'gif|jpeg|jpg|png';
                        $config1['max_size'] = 0;
                        /*$config1['max_width'] = 2900;
                        $config1['max_height'] = 2900;*/

                        $new_name1 = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                        $config1['file_name'] = $new_name1; //.$extencion;
                        $config1['file_ext_tolower'] = TRUE;

                        $this->load->library('upload', $config1);
                         $this->upload->initialize($config1);
                        $this->upload->do_upload('apoderado_foto');

                        $img_data1 = $this->upload->data();
                        $extension1 = $img_data1['file_ext'];
                        /* ********************INICIO para resize***************************** */
                        if($img_data1['file_ext'] == ".jpg" || $img_data1['file_ext'] == ".png" || $img_data1['file_ext'] == ".jpeg" || $img_data1['file_ext'] == ".gif") {
                            $conf1['image_library'] = 'gd2';
                            $conf1['source_image'] = $img_data1['full_path'];
                            $conf1['new_image'] = './resources/images/apoderados/';
                            $conf1['maintain_ratio'] = TRUE;
                            $conf1['create_thumb'] = FALSE;
                            $conf1['width'] = 800;
                            $conf1['height'] = 600;
                            $this->image_lib->clear();
                            $this->image_lib->initialize($conf1);
                            if(!$this->image_lib->resize()){
                                echo $this->image_lib->display_errors('','');
                            }
                        }
                        /* ********************F I N  para resize***************************** */
                        //$directorio = base_url().'resources/imagenes/';
                        $directorio1 = $_SERVER['DOCUMENT_ROOT'].'/siaac_web/resources/images/apoderados/';
                        if(isset($fotoapo1) && !empty($fotoapo1)){
                          if(file_exists($directorio1.$fotoapo1)){
                              unlink($directorio1.$fotoapo1);
                              $mimagenthumb1 = str_replace(".", "_thumb.", $fotoapo1);
                              unlink($directorio1.$mimagenthumb1);
                          }
                      }
                        $confi1['image_library'] = 'gd2';
                        $confi1['source_image'] = './resources/images/apoderados/'.$new_name1.$extension1;
                        $confi1['new_image'] = './resources/images/apoderados/'."thumb_".$new_name1.$extension1;
                        $confi1['create_thumb'] = FALSE;
                        $confi1['maintain_ratio'] = TRUE;
                        $confi1['width'] = 50;
                        $confi1['height'] = 50;

                        $this->image_lib->clear();
                        $this->image_lib->initialize($confi1);
                        $this->image_lib->resize();

                        $fotoapo = $new_name1.$extension1;
                    }else{
                        $fotoapo = $fotoapo1;
                    }
                /* *********************FIN imagen***************************** */
                    $params = array(
                        'estado_id' => $this->input->post('estado_id'),
                        'genero_id' => $this->input->post('genero_id'),
                        'estadocivil_id' => $this->input->post('estadocivil_id'),
                        'estudiante_nombre' => $this->input->post('estudiante_nombre'),
                        'estudiante_apellidos' => $this->input->post('estudiante_apellidos'),
                        'estudiante_fechanac' => $this->input->post('estudiante_fechanac'),
                        'estudiante_edad' => $this->input->post('estudiante_edad'),
                        'estudiante_ci' => $this->input->post('estudiante_ci'),
                        'estudiante_extci' => $this->input->post('estudiante_extci'),
                        'estudiante_codigo' => $this->input->post('estudiante_codigo'),
                        'estudiante_direccion' => $this->input->post('estudiante_direccion'),
                        'estudiante_telefono' => $this->input->post('estudiante_telefono'),
                        'estudiante_celular' => $this->input->post('estudiante_celular'),
                        'estudiante_foto' => $foto,
                        'estudiante_lugarnac' => $this->input->post('estudiante_lugarnac'),
                        'estudiante_nacionalidad' => $this->input->post('estudiante_nacionalidad'),
                        'estudiante_establecimiento' => $this->input->post('estudiante_establecimiento'),
                        'estudiante_distrito' => $this->input->post('estudiante_distrito'),
                        'estudiante_apoderado' => $this->input->post('estudiante_apoderado'),
                        'apoderado_foto' => $fotoapo,
                        'estudiante_apodireccion' => $this->input->post('estudiante_apodireccion'),
                        'estudiante_apoparentesco' => $this->input->post('estudiante_apoparentesco'),
                        'estudiante_apotelefono' => $this->input->post('estudiante_apotelefono'),
                        'estudiante_email' => $this->input->post('estudiante_email'),
                        'estudiante_nit' => $this->input->post('estudiante_nit'),
                        'estudiante_razon' => $this->input->post('estudiante_razon'),
                        //'estudiante_login' => $this->input->post('estudiante_codigo'),
                        //'estudiante_clave' => md5($this->input->post('estudiante_ci')),
                        //'tipousuario_id' => 3,
                    );

                        $this->Estudiante_model->update_estudiante($estudiante_id,$params);
                        $cliente_id = $this->input->post('cliente_id');
                        $paramc = array(
                        'estado_id' => $this->input->post('estado_id'),
                        'cliente_codigo' => $this->input->post('estudiante_codigo'),
                        'cliente_nombre' => $this->input->post('estudiante_nombre')." ".$this->input->post('estudiante_apellidos'),
                        'cliente_ci' => $this->input->post('estudiante_ci'),
                        'cliente_direccion' => $this->input->post('estudiante_direccion'),
                        'cliente_telefono' => $this->input->post('estudiante_telefono'),
                        'cliente_celular' => $this->input->post('estudiante_celular'),
                        'cliente_email' => $this->input->post('estudiante_email'),
                        'cliente_nit' => $this->input->post('estudiante_nit'),
                        'cliente_razon' => $this->input->post('estudiante_razon'),
                    );
                    $this->Cliente_model->update_cliente($cliente_id, $paramc);
                    redirect('estudiante/index');
                }
                else
                {
                    $this->load->model('Estado_model');
                    $tipo = 1;
                    $data['all_estado'] = $this->Estado_model->get_estado_tipo($tipo);

                    $this->load->model('Genero_model');
                    $data['all_genero'] = $this->Genero_model->get_all_genero();

                    $this->load->model('Estado_civil_model');
                    $data['all_estado_civil'] = $this->Estado_civil_model->get_all_estado_civil();

                    $data['_view'] = 'estudiante/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The estudiante you are trying to edit does not exist.');
        }
    }

    /*
     * Deleting estudiante
     */
    function remove($estudiante_id)
    {
        if($this->acceso(53)){
            $estudiante = $this->Estudiante_model->get_estudiante($estudiante_id);
            // check if the estudiante exists before trying to delete it
            if(isset($estudiante['estudiante_id']))
            {
                $this->Estudiante_model->delete_estudiante($estudiante_id);
                redirect('estudiante/index');
            }
            else
                show_error('The estudiante you are trying to delete does not exist.');
        }
    }
    function menu_estudiante()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(131)&&$this->privado($estudiante_id)){
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
            $data['estudiante'] = $this->Estudiante_model->get_student($estudiante_id);
            $data['_view'] = 'estudiante/menu_estudiante';
            $this->load->view('layouts/main',$data);
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
       }
         
    }
    /* puede cambiar su información basica */
    function datos()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(132)&&$this->privado($estudiante_id)){
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
            // check if the estudiante exists before trying to edit it
            $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);

            if(isset($data['estudiante']['estudiante_id']))
            {
                $this->load->library('form_validation');

                $this->form_validation->set_rules('estudiante_direccion','Dirección','required');
                if($this->form_validation->run())
                {
                /* *********************FIN imagen***************************** */
                    $params = array(
                        'estudiante_direccion' => $this->input->post('estudiante_direccion'),
                        'estudiante_telefono' => $this->input->post('estudiante_telefono'),
                        'estudiante_celular' => $this->input->post('estudiante_celular'),
                        'estudiante_email' => $this->input->post('estudiante_email'),
                        //'estudiante_login' => $this->input->post('estudiante_codigo'),
                        //'estudiante_clave' => md5($this->input->post('estudiante_ci')),
                    );
                    $this->Estudiante_model->update_estudiante($estudiante_id,$params);            
                    redirect('estudiante/menu_estudiante');
                }
                else
                {
                    $data['_view'] = 'estudiante/datos';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The estudiante you are trying to edit does not exist.');
        }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
    }
    
    function carreras()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(133)&&$this->privado($estudiante_id)){
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);
                if(isset($data['estudiante']['estudiante_id']))
                {
                    $this->load->model('Carrera_model');
                    $data['carrera'] = $this->Carrera_model->get_carrera_porestudante($estudiante_id);

                    $data['_view'] = 'estudiante/carreras';
                    $this->load->view('layouts/main',$data);
                }
                else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
    }
    
    function materiales($estudiante_id)
    {
        if($this->acceso(133)&&$this->privado($estudiante_id)){
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);
                if(isset($data['estudiante']['estudiante_id']))
                {
                    $this->load->model('Carrera_model');
//                    $data['carrera'] = $this->Carrera_model->get_carrera_porestudante($estudiante_id);
                    $data['material'] = $this->Carrera_model->get_material_estudio($estudiante_id);

                    $data['_view'] = 'estudiante/material';
                    $this->load->view('layouts/main',$data);
                }
                else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
    }
    
    
    function knotas()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(134)&&$this->privado($estudiante_id)){
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);
                if(isset($data['estudiante']['estudiante_id']))
                {
                    $this->load->model('Carrera_model');
                    $data['carrera'] = $this->Carrera_model->get_carrera_porestudante($estudiante_id);

                    $data['_view'] = 'estudiante/knotas';
                    $this->load->view('layouts/main',$data);
                }
                else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
    }
    function mikardex_academico($carrera_id, $estudiante_id)
    {
        if($this->acceso(134)&&$this->privado($estudiante_id)){
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);
                if(isset($data['estudiante']['estudiante_id']))
                {
                    $this->load->model('Carrera_model');
                    $data['carrera'] = $this->Carrera_model->get_carrera($carrera_id);

                    $data['kardex'] = $this->Estudiante_model->get_kardexcarrera_estudiante($carrera_id, $estudiante_id);

                    $data['_view'] = 'estudiante/mikardex_academico';
                    $this->load->view('layouts/main',$data);
                }
                else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
    }
    function keconomico()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(135)&&$this->privado($estudiante_id)){
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);
                if(isset($data['estudiante']['estudiante_id']))
                {
                    $data['mikardex'] = $this->Estudiante_model->get_estudiante_kardexecon($estudiante_id);

                     $data['_view'] = 'estudiante/keconomico';
                     $this->load->view('layouts/main',$data);
                }else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
       
    }

    function cuenta()
    {
        $estudiante_id = $this->session_data['usuario_id'];
        if($this->acceso(135)&&$this->privado($estudiante_id)){
             
            //usuario_id ===>id de estudiante
            $usuario_id = $this->session_data['usuario_id'];
            if($estudiante_id == $usuario_id){
                $data['estudiante'] = $this->Estudiante_model->get_esteestudiante($estudiante_id);

                if(isset($data['estudiante']['estudiante_id']))  
                {
                    $this->load->library('form_validation');
                    $this->form_validation->set_rules('estudiante_login','estudiante_login','required');
                    if($this->form_validation->run()) {
                        $curr_password = md5($this->input->post('estudiante_clave'));
                        if ($curr_password==$data['estudiante']['estudiante_clave']) {
                           $params = array(
                                'estudiante_login' => $this->input->post('estudiante_login'),
                                'estudiante_clave' => md5($this->input->post('newpass')),
                            );
                            $this->Estudiante_model->update_estudiante($estudiante_id,$params);
                            redirect('estudiante/menu_estudiante');
                        }else{
                            $data['mensaje'] = 'La clave antigua es incorrecta.';
                            $data['_view'] = 'estudiante/cuenta';
                            $this->load->view('layouts/main',$data);
                        }
                    }else {
                        $data['mensaje'] = '';
                        $data['_view'] = 'estudiante/cuenta';
                     $this->load->view('layouts/main',$data);
                    }
                }else
                    show_error('The estudiante you are trying to edit does not exist.');
            }else{
                $data['_view'] = 'login/mensajeacceso';
                $this->load->view('layouts/main',$data);
            }
        }
       
    }

    function restablecer($estudiante_id)
    {
        if($this->acceso(51)){
           
           $sql="UPDATE estudiante SET estudiante_login=estudiante_ci, estudiante_clave=md5(estudiante_ci) WHERE estudiante_id=".$estudiante_id." ";
           $this->db->query($sql);
           redirect('estudiante/index');
        }
    }


    public function generar_excel(){


    $llamadas = $this->Estudiante_model->get_estudiantesexcel();
    if(count($llamadas) > 0){
        //Cargamos la librería de excel.
        $this->load->library('excel'); $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('estudiante');
        //Contador de filas
        $contador = 1;
        
        //Le aplicamos ancho las columnas(OPCIONAL).
       /* $this->excel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('B')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('E')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('F')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('G')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('H')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('I')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('J')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('K')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('L')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('M')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('N')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('O')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('P')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('Q')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('R')->setWidth(30);
        //Le aplicamos negrita a los títulos de la cabecera(OPCIONAL).
        $this->excel->getActiveSheet()->getStyle("A{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("B{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("C{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("D{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("F{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("G{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("H{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("I{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("J{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("K{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("L{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("M{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("N{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("O{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("P{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("Q{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("R{$contador}")->getFont()->setBold(true);*/
        //Definimos los títulos de la cabecera.
        $this->excel->getActiveSheet()->setCellValue("A{$contador}", 'N°');
        $this->excel->getActiveSheet()->setCellValue("B{$contador}", 'NOMBRE');
        $this->excel->getActiveSheet()->setCellValue("C{$contador}", 'APELLIDOS');
        $this->excel->getActiveSheet()->setCellValue("D{$contador}", 'CODIGO');
        $this->excel->getActiveSheet()->setCellValue("E{$contador}", 'C.I.');
        $this->excel->getActiveSheet()->setCellValue("F{$contador}", 'EXT');
        $this->excel->getActiveSheet()->setCellValue("G{$contador}", 'FECHA NAC.');
        $this->excel->getActiveSheet()->setCellValue("H{$contador}", 'DIRECCION');
        $this->excel->getActiveSheet()->setCellValue("I{$contador}", 'TELEFONO');
        $this->excel->getActiveSheet()->setCellValue("J{$contador}", 'CELULAR');
        $this->excel->getActiveSheet()->setCellValue("K{$contador}", 'NACIONALIDAD');
        $this->excel->getActiveSheet()->setCellValue("L{$contador}", 'ESTABLECIMIENTO');
        $this->excel->getActiveSheet()->setCellValue("M{$contador}", 'DISTRITO');
        $this->excel->getActiveSheet()->setCellValue("N{$contador}", 'APODERADO');
        $this->excel->getActiveSheet()->setCellValue("O{$contador}", 'PARENTESCO');
        $this->excel->getActiveSheet()->setCellValue("P{$contador}", 'DIRECCION APODERADO');
        $this->excel->getActiveSheet()->setCellValue("Q{$contador}", 'TELEFONO APODERADO');
        $this->excel->getActiveSheet()->setCellValue("R{$contador}", 'NIT');
        $this->excel->getActiveSheet()->setCellValue("S{$contador}", 'RAZON SOCIAL');
        //Definimos la data del cuerpo.        
        foreach($llamadas as $l){
           //Incrementamos una fila más, para ir a la siguiente.
           $contador++;
           //Informacion de las filas de la consulta.
         
           $this->excel->getActiveSheet()->setCellValue("A{$contador}", $contador-1);
           $this->excel->getActiveSheet()->setCellValue("B{$contador}", $l['estudiante_nombre']);
           $this->excel->getActiveSheet()->setCellValue("C{$contador}", $l['estudiante_apellidos']); 
           $this->excel->getActiveSheet()->setCellValue("D{$contador}", $l['estudiante_codigo']);
           $this->excel->getActiveSheet()->setCellValue("E{$contador}", $l['estudiante_ci']);
           $this->excel->getActiveSheet()->setCellValue("F{$contador}", $l['estudiante_extci']);
           $this->excel->getActiveSheet()->setCellValue("G{$contador}", $l['estudiante_fechanac']);
           $this->excel->getActiveSheet()->setCellValue("H{$contador}", $l['estudiante_direccion']);
           $this->excel->getActiveSheet()->setCellValue("I{$contador}", $l['estudiante_telefono']);
           $this->excel->getActiveSheet()->setCellValue("J{$contador}", $l['estudiante_celular']);
           $this->excel->getActiveSheet()->setCellValue("K{$contador}", $l['estudiante_nacionalidad']);
           $this->excel->getActiveSheet()->setCellValue("L{$contador}", $l['estudiante_establecimiento']);
           $this->excel->getActiveSheet()->setCellValue("M{$contador}", $l['estudiante_distrito']);
           $this->excel->getActiveSheet()->setCellValue("N{$contador}", $l['estudiante_apoderado']);
           $this->excel->getActiveSheet()->setCellValue("O{$contador}", $l['estudiante_apoparentesco']);
           $this->excel->getActiveSheet()->setCellValue("P{$contador}", $l['estudiante_apodireccion']);
           $this->excel->getActiveSheet()->setCellValue("Q{$contador}", $l['estudiante_apotelefono']);
           $this->excel->getActiveSheet()->setCellValue("R{$contador}", $l['estudiante_nit']);
           $this->excel->getActiveSheet()->setCellValue("S{$contador}", $l['estudiante_razon']);
        }
        //Le ponemos un nombre al archivo que se va a generar.
        $hoy = date('d/m/Y H:i:s');
        $archivo = "Estudiantes".$hoy.".xls";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$archivo.'"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');
        //Hacemos una salida al navegador con el archivo Excel.
        $objWriter->save('php://output');
     }else{
        echo 'No se han encontrado estudiantes';
        exit;        
     }}
    
}
